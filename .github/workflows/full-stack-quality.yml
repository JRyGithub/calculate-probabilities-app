name: Full Stack Quality Check

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  frontend-quality:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'frontend-calc-prob-app/') || github.event_name == 'pull_request'

    defaults:
      run:
        working-directory: ./frontend-calc-prob-app

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.11.0"

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Check Prettier formatting
        run: bun run format:check

      - name: Run ESLint
        run: bun run lint

      - name: Type check
        run: bun run tsc --noEmit

      - name: Build project
        run: bun run build

  backend-quality:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'backend-calc-prob-app/') || github.event_name == 'pull_request'

    defaults:
      run:
        working-directory: ./backend-calc-prob-app

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Restore dependencies
        run: dotnet restore

      - name: Check code formatting
        run: dotnet format --verify-no-changes --verbosity diagnostic

      - name: Build project
        run: dotnet build --no-restore --configuration Release

      - name: Run tests (if any)
        run: dotnet test --no-build --configuration Release --verbosity normal

  docker-build:
    runs-on: ubuntu-latest
    needs: [frontend-quality, backend-quality]
    if: always() && (needs.frontend-quality.result == 'success' || needs.frontend-quality.result == 'skipped') && (needs.backend-quality.result == 'success' || needs.backend-quality.result == 'skipped')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test Docker Compose build
        run: docker-compose build --no-cache

      - name: Test Docker Compose up
        run: |
          docker-compose up -d
          sleep 30
          curl -f http://localhost:3000 || exit 1
          curl -f http://localhost:5000/weatherforecast || exit 1
          docker-compose down
